{"version":3,"sources":["calendar/bigScheduler/BigSchedulerBasic.js","grid/toastGrid/ToastGridBasic.js","calendar/bigScheduler/AddResourceForm.js","calendar/bigScheduler/withDnDContext.js","dashboard/chart/Basic.js","App.js","serviceWorker.js","index.js"],"names":["ToastGridBasic","data","id","name","dept","proejct","use","c3","header","height","complexColumns","title","childNames","columns","editOptions","type","useViewMode","sortable","maxLength","listItems","text","value","component","onBeforeChange","ev","console","log","onAfterChange","summary","position","columnContent","template","valueMap","sum","avg","toFixed","_MyComponent","react_default","a","createElement","toastui_react_grid_default","_this","rowHeight","bodyHeight","virtualScrolling","heightResizable","rowHeaders","onClick","handleClick","pagination","gridRef","React","createRef","handleAppendRow","current","getInstance","appendRow","react","this","Component","FormItem","Form","Item","create","props","visible","onCancel","onCreate","getFieldDecorator","form","modal","okText","onOk","es_form","layout","label","rules","required","message","input","DragDropContext","HTML5Backend","Option","Select","dataIndex","i","push","key","concat","age","address","schedulerData","SchedulerData","moment","format","DATE_FORMAT","ViewTypes","Week","setLocaleMoment","setResources","groupOnly","parentId","events","start","end","resourceId","bgColor","setEvents","BigScheduler","_Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","viewModel","modalVisible","visibleDrawer","selectedRowKeys","loading","showDrawer","setState","onCloseDrawer","handleCreate","addResource","children","saveFormRef","prevClick","prev","nextClick","next","onSelectDate","date","setDate","onViewChange","view","setViewType","viewType","showAgenda","isEventPerspective","eventClicked","event","alert","moveEvent","slotId","slotName","window","confirm","newEvent","item","newFreshId","forEach","addEvent","toggleExpandFunc","toggleExpandStatus","updateEventStart","newStart","updateEventEnd","newEnd","resourceName","resources","newFreshName","ops1","ops2","onScrollRight","schedulerContent","maxScrollLeft","Day","scrollLeft","onScrollLeft","onScrollTop","maxScrollTop","onScrollBottom","onSelectChange","inherits","createClass","_this$state","rowSelection","onChange","hasSelected","leftCustomHeader","style","fontWeight","className","drawer","width","onClose","hideRequiredMark","ref","row","gutter","col","span","tag","closable","divider","es_select","placeholder","date_picker","RangePicker","getPopupContainer","trigger","parentNode","marginBottom","es_button","disabled","marginLeft","table","dataSource","left","bottom","borderTop","padding","background","textAlign","onCloseAccount","marginRight","lib_default","eventItemClick","viewEventText","viewEvent2Text","viewEventClick","viewEvent2Click","withDragDropContext","visitData","beginDay","Date","getTime","x","y","Math","floor","random","Basic","Charts","total","numeral","contentHeight","NumberInfo_default","subTitle","status","subTotal","line","marginTop","action","tooltip","icon","footer","Trend_default","flag","color","percent","strokeWidth","target","SubMenu","Menu","Header","Layout","Content","Sider","headerMenu","sidebarMenu_Calendar","subMenu","parentTitle","BigSchedulerBasic","sidebarMenu_Grid","ToastGridBasic_ToastGridBasic","sidebarMenu_Dashboard","Basic_Basic","App","Breadcrumb1","Breadcrumb2","Breadcrumb3","selectedHeaderMenu","sidebarMenu","content","collapsed","_handlerClickHeader","e","_renderHeaderMenu","map","menu","es_menu","_renderSubMenu","_renderSubMenuItem","_handlerClickSubMenuItem","empty","toggleSider","_renderTrigger","theme","mode","defaultSelectedKeys","lineHeight","collapsible","defaultOpenKeys","borderRight","breadcrumb","margin","minHeight","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f8f7aa33.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Drawer,\r\n  Form,\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Input,\r\n  Select,\r\n  DatePicker,\r\n  Icon,\r\n  Modal,\r\n  Divider,\r\n  Tag,\r\n  Table\r\n} from \"antd\";\r\nimport AddResourceForm from \"./AddResourceForm\";\r\n\r\n//1. import\r\nimport Scheduler, {\r\n  SchedulerData,\r\n  ViewTypes,\r\n  DATE_FORMAT\r\n} from \"react-big-scheduler\";\r\n\r\n//include `react-big-scheduler/lib/css/style.css` for styles, link it in html or import it here\r\nimport \"react-big-scheduler/lib/css/style.css\";\r\nimport \"react-big-scheduler/lib/css/antd-globals-hiding-hack.css\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport withDragDropContext from \"./withDnDContext\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    dataIndex: \"name\"\r\n  },\r\n  {\r\n    title: \"Age\",\r\n    dataIndex: \"age\"\r\n  },\r\n  {\r\n    title: \"Address\",\r\n    dataIndex: \"address\"\r\n  }\r\n];\r\nconst data = [];\r\nfor (let i = 0; i < 46; i++) {\r\n  data.push({\r\n    key: i,\r\n    name: `Edward King ${i}`,\r\n    age: 32,\r\n    address: `London, Park Lane no. ${i}`\r\n  });\r\n}\r\n\r\n//2. create the view model, put it in the props obj\r\nlet schedulerData = new SchedulerData(\r\n  new moment().format(DATE_FORMAT),\r\n  ViewTypes.Week\r\n);\r\n//set locale moment to the schedulerData, if your locale isn't English. By default, Scheduler comes with English(en, United States).\r\n//moment.locale(\"ko-kr\");\r\nschedulerData.setLocaleMoment(moment);\r\n//set resources here or later\r\nlet resources = [\r\n  {\r\n    id: \"g0\",\r\n    name: \"공공사업팀\",\r\n    groupOnly: true\r\n  },\r\n  {\r\n    id: \"r1\",\r\n    name: \"이순신 부장\",\r\n    parentId: \"g0\"\r\n  },\r\n  {\r\n    id: \"r2\",\r\n    name: \"세종 대리\",\r\n    parentId: \"g0\"\r\n  },\r\n  {\r\n    id: \"r3\",\r\n    name: \"강감찬 사원\",\r\n    parentId: \"g0\"\r\n  },\r\n  {\r\n    id: \"g1\",\r\n    name: \"아키텍쳐팀\",\r\n    groupOnly: true\r\n  },\r\n  {\r\n    id: \"r4\",\r\n    name: \"구구단 과장\",\r\n    parentId: \"g1\"\r\n  }\r\n];\r\nschedulerData.setResources(resources);\r\n//set events here or later,\r\n//the event array should be sorted in ascending order by event.start property, otherwise there will be some rendering errors\r\nlet events = [\r\n  {\r\n    id: 1,\r\n    start: \"2019-04-18 09:00:00\",\r\n    end: \"2019-05-21 18:00:00\",\r\n    resourceId: \"r3\",\r\n    title: \"A프로젝트\"\r\n    //bgColor: \"#D9D9D9\"\r\n  },\r\n  {\r\n    id: 2,\r\n    start: \"2019-05-19 12:30:00\",\r\n    end: \"2019-12-20 23:30:00\",\r\n    resourceId: \"r2\",\r\n    title: \"A프로젝트\"\r\n    //resizable: false\r\n  },\r\n  {\r\n    id: 3,\r\n    start: \"2019-05-22 09:00:00\",\r\n    end: \"2019-12-26 18:00:00\",\r\n    resourceId: \"r3\",\r\n    title: \"A프로젝트\"\r\n    //movable: false\r\n  },\r\n  {\r\n    id: 4,\r\n    start: \"2019-05-19 14:30:00\",\r\n    end: \"2019-12-20 23:30:00\",\r\n    resourceId: \"r1\",\r\n    title: \"A프로젝트\"\r\n    //startResizable: false\r\n  },\r\n  {\r\n    id: 5,\r\n    start: \"2019-05-22\",\r\n    end: \"2019-05-23\",\r\n    resourceId: \"r4\",\r\n    title: \"A프로젝트\",\r\n    //rrule: \"FREQ=WEEKLY;DTSTART=20171219T013000Z;BYDAY=TU,FR\",\r\n    bgColor: \"#f759ab\"\r\n  },\r\n  {\r\n    id: 6,\r\n    start: \"2019-05-23\",\r\n    end: \"2019-05-24\",\r\n    resourceId: \"r4\",\r\n    title: \"A프로젝트\",\r\n    //rrule: \"FREQ=WEEKLY;DTSTART=20171219T013000Z;BYDAY=TU,FR\",\r\n    bgColor: \"#f759ab\"\r\n  }\r\n];\r\nschedulerData.setEvents(events);\r\n\r\nexport class BigScheduler extends Component {\r\n  state = {\r\n    viewModel: schedulerData,\r\n    modalVisible: false,\r\n    visibleDrawer: false,\r\n    selectedRowKeys: [], // Check here to configure the default column\r\n    loading: false\r\n  };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visibleDrawer: true\r\n    });\r\n  };\r\n\r\n  onCloseDrawer = () => {\r\n    this.setState({\r\n      visibleDrawer: false\r\n    });\r\n  };\r\n\r\n  // showModal = () => {\r\n  //   this.setState({ modalVisible: true });\r\n  // };\r\n  // handleCancel = () => {\r\n  //   this.setState({ modalVisible: false });\r\n  // };\r\n  handleCreate = () => {\r\n    const form = this.form;\r\n    console.log(form);\r\n\r\n    // form.validateFields((err, values) => {\r\n    //   if (err) {\r\n    //     return;\r\n    //   }\r\n    //   this.addResource(values.name);\r\n    this.addResource(\r\n      form.props.children[2].props.children[1].props.children.props.children\r\n        .props.value\r\n    );\r\n\r\n    this.setState({ visibleDrawer: false });\r\n    // });\r\n  };\r\n  saveFormRef = form => {\r\n    this.form = form;\r\n  };\r\n\r\n  prevClick = schedulerData => {\r\n    schedulerData.prev();\r\n    console.log(schedulerData);\r\n    schedulerData.setEvents(events);\r\n    this.setState({\r\n      viewModel: schedulerData\r\n    });\r\n  };\r\n\r\n  nextClick = schedulerData => {\r\n    schedulerData.next();\r\n    schedulerData.setEvents(events);\r\n    this.setState({\r\n      viewModel: schedulerData\r\n    });\r\n  };\r\n\r\n  onSelectDate = (schedulerData, date) => {\r\n    schedulerData.setDate(date);\r\n    schedulerData.setEvents(events);\r\n    this.setState({\r\n      viewModel: schedulerData\r\n    });\r\n  };\r\n\r\n  onViewChange = (schedulerData, view) => {\r\n    schedulerData.setViewType(\r\n      view.viewType,\r\n      view.showAgenda,\r\n      view.isEventPerspective\r\n    );\r\n    schedulerData.setEvents(events);\r\n    this.setState({\r\n      viewModel: schedulerData\r\n    });\r\n  };\r\n\r\n  eventClicked = (schedulerData, event) => {\r\n    alert(\r\n      `You just clicked an event: {id: ${event.id}, title: ${event.title}}`\r\n    );\r\n  };\r\n\r\n  moveEvent = (schedulerData, event, slotId, slotName, start, end) => {\r\n    if (\r\n      window.confirm(\r\n        `Do you want to move the event? {eventId: ${event.id}, eventTitle: ${\r\n          event.title\r\n        }, newSlotId: ${slotId}, newSlotName: ${slotName}, newStart: ${start}, newEnd: ${end}`\r\n      )\r\n    ) {\r\n      schedulerData.moveEvent(event, slotId, slotName, start, end);\r\n      this.setState({\r\n        viewModel: schedulerData\r\n      });\r\n    }\r\n  };\r\n\r\n  newEvent = (schedulerData, slotId, slotName, start, end, type, item) => {\r\n    if (\r\n      window.confirm(\r\n        `Do you want to create a new event? {slotId: ${slotId}, slotName: ${slotName}, start: ${start}, end: ${end}, type: ${type}, item: ${item}}`\r\n      )\r\n    ) {\r\n      let newFreshId = 0;\r\n      schedulerData.events.forEach(item => {\r\n        if (item.id >= newFreshId) newFreshId = item.id + 1;\r\n      });\r\n\r\n      let newEvent = {\r\n        id: newFreshId,\r\n        title: \"New event you just created\",\r\n        start: start,\r\n        end: end,\r\n        resourceId: slotId,\r\n        bgColor: \"purple\"\r\n      };\r\n      schedulerData.addEvent(newEvent);\r\n      this.setState({\r\n        viewModel: schedulerData\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleExpandFunc = (schedulerData, slotId) => {\r\n    schedulerData.toggleExpandStatus(slotId);\r\n    this.setState({\r\n      viewModel: schedulerData\r\n    });\r\n  };\r\n\r\n  updateEventStart = (schedulerData, event, newStart) => {\r\n    if (\r\n      window.confirm(\r\n        `Do you want to adjust the start of the event? {eventId: ${\r\n          event.id\r\n        }, eventTitle: ${event.title}, newStart: ${newStart}}`\r\n      )\r\n    ) {\r\n      schedulerData.updateEventStart(event, newStart);\r\n    }\r\n    this.setState({\r\n      viewModel: schedulerData\r\n    });\r\n  };\r\n\r\n  updateEventEnd = (schedulerData, event, newEnd) => {\r\n    if (\r\n      window.confirm(\r\n        `Do you want to adjust the end of the event? {eventId: ${\r\n          event.id\r\n        }, eventTitle: ${event.title}, newEnd: ${newEnd}}`\r\n      )\r\n    ) {\r\n      schedulerData.updateEventEnd(event, newEnd);\r\n    }\r\n    this.setState({\r\n      viewModel: schedulerData\r\n    });\r\n  };\r\n\r\n  addResource = resourceName => {\r\n    let schedulerData = this.state.viewModel;\r\n    let newFreshId = schedulerData.resources.length + 1;\r\n    let newFreshName = resourceName;\r\n    schedulerData.addResource({ id: newFreshId, name: newFreshName });\r\n    this.setState({\r\n      viewModel: schedulerData\r\n    });\r\n  };\r\n\r\n  ops1 = (schedulerData, event) => {\r\n    alert(\r\n      `You just executed ops1 to event: {id: ${event.id}, title: ${\r\n        event.title\r\n      }}`\r\n    );\r\n  };\r\n\r\n  ops2 = (schedulerData, event) => {\r\n    alert(\r\n      `You just executed ops2 to event: {id: ${event.id}, title: ${\r\n        event.title\r\n      }}`\r\n    );\r\n  };\r\n\r\n  onScrollRight = (schedulerData, schedulerContent, maxScrollLeft) => {\r\n    if (schedulerData.ViewTypes === ViewTypes.Day) {\r\n      schedulerData.next();\r\n      schedulerData.setEvents(events);\r\n      this.setState({\r\n        viewModel: schedulerData\r\n      });\r\n\r\n      schedulerContent.scrollLeft = maxScrollLeft - 10;\r\n    }\r\n  };\r\n\r\n  onScrollLeft = (schedulerData, schedulerContent, maxScrollLeft) => {\r\n    if (schedulerData.ViewTypes === ViewTypes.Day) {\r\n      schedulerData.prev();\r\n      schedulerData.setEvents(events);\r\n      this.setState({\r\n        viewModel: schedulerData\r\n      });\r\n\r\n      schedulerContent.scrollLeft = 10;\r\n    }\r\n  };\r\n\r\n  onScrollTop = (schedulerData, schedulerContent, maxScrollTop) => {\r\n    console.log(\"onScrollTop\");\r\n  };\r\n\r\n  onScrollBottom = (schedulerData, schedulerContent, maxScrollTop) => {\r\n    console.log(\"onScrollBottom\");\r\n  };\r\n\r\n  onSelectChange = selectedRowKeys => {\r\n    console.log(\"selectedRowKeys changed: \", selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  render() {\r\n    //const { schedulerData } = this.props;\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    const { viewModel } = this.state;\r\n\r\n    const { loading, selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n\r\n    let leftCustomHeader = (\r\n      <div>\r\n        <span style={{ fontWeight: \"bold\" }}>\r\n          <span onClick={this.showDrawer} className=\"spanButton\">\r\n            배정\r\n          </span>\r\n        </span>\r\n        {/* <AddResourceForm\r\n          ref={this.saveFormRef}\r\n          visible={this.state.modalVisible}\r\n          onCancel={this.handleCancel}\r\n          onCreate={this.handleCreate}\r\n          addResource={this.addResource}\r\n        /> */}\r\n        <Drawer\r\n          title=\"인력 배정\"\r\n          width={720}\r\n          onClose={this.onCloseDrawer}\r\n          visible={this.state.visibleDrawer}\r\n        >\r\n          <Form layout=\"vertical\" hideRequiredMark ref={this.saveFormRef}>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <div>\r\n                  <Tag closable>조성현 과장</Tag>\r\n                  <Tag closable>황아름 차장</Tag>\r\n                  <Tag closable>김지혜 대리</Tag>\r\n                  <Tag closable>박영수 차장</Tag>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Divider>임직원 조회</Divider>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Owner\">\r\n                  {getFieldDecorator(\"owner\", {\r\n                    rules: [\r\n                      { required: true, message: \"Please select an owner\" }\r\n                    ]\r\n                  })(\r\n                    <Select placeholder=\"Please select an owner\">\r\n                      <Option value=\"xiao\">Xiaoxiao Fu</Option>\r\n                      <Option value=\"mao\">Maomao Zhou</Option>\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Name\">\r\n                  {getFieldDecorator(\"name\", {\r\n                    rules: [\r\n                      { required: true, message: \"Please enter user name\" }\r\n                    ]\r\n                  })(<Input placeholder=\"Please enter user name\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"DateTime\">\r\n                  {getFieldDecorator(\"dateTime\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Please choose the dateTime\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <DatePicker.RangePicker\r\n                      style={{ width: \"100%\" }}\r\n                      getPopupContainer={trigger => trigger.parentNode}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>{/* <Button>검색</Button> */}</Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <div>\r\n                  <div style={{ marginBottom: 16 }}>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      onClick={this.start}\r\n                      disabled={!hasSelected}\r\n                      loading={loading}\r\n                    >\r\n                      Reload\r\n                    </Button>\r\n                    <span style={{ marginLeft: 8 }}>\r\n                      {hasSelected\r\n                        ? `Selected ${selectedRowKeys.length} items`\r\n                        : \"\"}\r\n                    </span>\r\n                  </div>\r\n                  <Table\r\n                    rowSelection={rowSelection}\r\n                    columns={columns}\r\n                    dataSource={data}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              left: 0,\r\n              bottom: 0,\r\n              width: \"100%\",\r\n              borderTop: \"1px solid #e9e9e9\",\r\n              padding: \"10px 16px\",\r\n              background: \"#fff\",\r\n              textAlign: \"right\"\r\n            }}\r\n          >\r\n            <Button onClick={this.onCloseAccount} style={{ marginRight: 8 }}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleCreate} type=\"primary\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Scheduler\r\n        schedulerData={viewModel}\r\n        prevClick={this.prevClick}\r\n        nextClick={this.nextClick}\r\n        onSelectDate={this.onSelectDate}\r\n        onViewChange={this.onViewChange}\r\n        eventItemClick={this.eventClicked}\r\n        moveEvent={this.moveEvent}\r\n        newEvent={this.newEvent}\r\n        toggleExpandFunc={this.toggleExpandFunc}\r\n        updateEventStart={this.updateEventStart}\r\n        updateEventEnd={this.updateEventEnd}\r\n        leftCustomHeader={leftCustomHeader}\r\n        viewEventText=\"승인\"\r\n        viewEvent2Text=\"반려\"\r\n        viewEventClick={this.ops1}\r\n        viewEvent2Click={this.ops2}\r\n        onScrollLeft={this.onScrollLeft}\r\n        onScrollRight={this.onScrollRight}\r\n        onScrollTop={this.onScrollTop}\r\n        onScrollBottom={this.onScrollBottom}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(withDragDropContext(BigScheduler));\r\n// export default withDragDropContext(BigScheduler);\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nimport \"tui-pagination/dist/tui-pagination.css\";\r\nimport \"tui-grid/dist/tui-grid.css\";\r\nimport \"tui-date-picker/dist/tui-date-picker.css\";\r\nimport Grid from \"@toast-ui/react-grid\";\r\n\r\nexport default class ToastGridBasic extends Component {\r\n  data = [\r\n    {\r\n      id: 1,\r\n      name: \"박영수 차장\",\r\n      dept: \"공공사업팀\",\r\n      proejct: \"\",\r\n      use: \"1\",\r\n      c3: 10000\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"김지혜 대리\",\r\n      dept: \"공공사업팀\",\r\n      proejct: \"\",\r\n      use: \"1\",\r\n      c3: 2200\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"조성현 과장\",\r\n      dept: \"공공사업팀\",\r\n      proejct: \"\",\r\n      use: \"1\",\r\n      c3: 100100\r\n    }\r\n  ];\r\n\r\n  header = {\r\n    height: 160,\r\n    complexColumns: [\r\n      {\r\n        title: \"컬럼 합치기\",\r\n        name: \"mergeColumn1\",\r\n        childNames: [\"id\", \"name\"]\r\n      },\r\n      {\r\n        title: \"합쳐져라\",\r\n        name: \"mergeColumn2\",\r\n        childNames: [\"dept\", \"project\", \"use\"]\r\n      }\r\n    ]\r\n  };\r\n  columns = [\r\n    {\r\n      name: \"id\",\r\n      title: \"ID\",\r\n      editOptions: {\r\n        type: \"text\",\r\n        useViewMode: true\r\n      },\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"name\",\r\n      title: \"Name\",\r\n      editOptions: {\r\n        type: \"text\",\r\n        maxLength: 10,\r\n        useViewMode: true\r\n      },\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"dept\",\r\n      title: \"Dept\",\r\n      editOptions: {\r\n        type: \"text\",\r\n        maxLength: 10,\r\n        useViewMode: false\r\n      },\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"project\",\r\n      title: \"Project\",\r\n      editOptions: {\r\n        type: \"text\",\r\n        maxLength: 10,\r\n        useViewMode: false\r\n      },\r\n      sortable: true\r\n    },\r\n    {\r\n      name: \"use\",\r\n      title: \"Use\",\r\n      editOptions: {\r\n        type: \"checkbox\",\r\n        listItems: [\r\n          { text: \"사용\", value: \"1\" },\r\n          { text: \"미사용\", value: \"2\" }\r\n        ],\r\n        useViewMode: true\r\n      }\r\n    },\r\n    {\r\n      title: \"DatePicker (Default)\",\r\n      name: \"c2\",\r\n      editOptions: {\r\n        type: \"text\",\r\n        useViewMode: false\r\n      },\r\n      component: {\r\n        name: \"datePicker\"\r\n      }\r\n    },\r\n    {\r\n      title: \"가격\",\r\n      name: \"c3\",\r\n      editOptions: {\r\n        type: \"text\",\r\n        useViewMode: true\r\n      }\r\n    },\r\n    {\r\n      title: \"Type\",\r\n      name: \"typeCode\",\r\n      onBeforeChange: function(ev) {\r\n        console.log(\"Before change:\" + ev);\r\n      },\r\n      onAfterChange: function(ev) {\r\n        console.log(\"After change:\" + ev);\r\n      },\r\n      editOptions: {\r\n        type: \"select\",\r\n        listItems: [\r\n          { text: \"그렇다\", value: \"1\" },\r\n          { text: \"아니다\", value: \"2\" },\r\n          { text: \"모른다\", value: \"3\" }\r\n        ],\r\n        useViewMode: true\r\n      }\r\n    }\r\n  ];\r\n\r\n  summary = {\r\n    height: 40,\r\n    position: \"bottom\", // or 'top'\r\n    columnContent: {\r\n      // c3: {\r\n      //   template: function(valueMap) {\r\n      //     return \"MAX: \" + valueMap.max + \"<br>MIN: \" + valueMap.min;\r\n      //   }\r\n      // },\r\n      c3: {\r\n        template: function(valueMap) {\r\n          return (\r\n            \"TOTAL: \" + valueMap.sum + \"<br>AVG: \" + valueMap.avg.toFixed(2)\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  _MyComponent = () => {\r\n    return (\r\n      <Grid\r\n        data={this.data}\r\n        columns={this.columns}\r\n        rowHeight={25}\r\n        bodyHeight={200}\r\n        virtualScrolling={true}\r\n        heightResizable={true}\r\n        rowHeaders={[\"rowNum\", \"checkbox\"]}\r\n        onClick={this.handleClick}\r\n        pagination={true}\r\n        summary={this.summary}\r\n        header={this.header}\r\n      />\r\n    );\r\n  };\r\n\r\n  gridRef = React.createRef();\r\n\r\n  handleAppendRow = () => {\r\n    this.gridRef.current.getInstance().appendRow({});\r\n  };\r\n\r\n  handleClick = () => {\r\n    console.log(\"click!!\");\r\n  };\r\n\r\n  render() {\r\n    return <Fragment>{this._MyComponent()}</Fragment>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Modal, Form, Input } from \"antd\";\r\nconst FormItem = Form.Item;\r\n\r\nconst AddResourceForm = Form.create()(props => {\r\n  const { visible, onCancel, onCreate, form } = props;\r\n  const { getFieldDecorator } = form;\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      title=\"New Resource\"\r\n      okText=\"Create\"\r\n      onCancel={onCancel}\r\n      onOk={onCreate}\r\n    >\r\n      <Form layout=\"vertical\">\r\n        <FormItem label=\"Name\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input the name of the resource!\"\r\n              }\r\n            ]\r\n          })(<Input />)}\r\n        </FormItem>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default AddResourceForm;\r\n","import { DragDropContext } from \"react-dnd\";\r\nimport HTML5Backend from \"react-dnd-html5-backend\";\r\n\r\nexport default DragDropContext(HTML5Backend);\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  ChartCard,\r\n  Field,\r\n  MiniArea,\r\n  MiniBar,\r\n  MiniProgress\r\n} from \"ant-design-pro/lib/Charts\";\r\nimport \"ant-design-pro/dist/ant-design-pro.css\";\r\n\r\nimport Trend from \"ant-design-pro/lib/Trend\";\r\nimport NumberInfo from \"ant-design-pro/lib/NumberInfo\";\r\nimport { Row, Col, Icon, Tooltip } from \"antd\";\r\nimport numeral from \"numeral\";\r\nimport moment from \"moment\";\r\n\r\nconst visitData = [];\r\nconst beginDay = new Date().getTime();\r\nfor (let i = 0; i < 20; i += 1) {\r\n  visitData.push({\r\n    x: moment(new Date(beginDay + 1000 * 60 * 60 * 24 * i)).format(\r\n      \"YYYY-MM-DD\"\r\n    ),\r\n    y: Math.floor(Math.random() * 100) + 10\r\n  });\r\n}\r\n\r\nexport default class Basic extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Row gutter={16}>\r\n            <Col span={12}>\r\n              <ChartCard\r\n                title=\"1번 차트\"\r\n                total={numeral(8846).format(\"0,0\")}\r\n                contentHeight={134}\r\n              >\r\n                <NumberInfo\r\n                  subTitle={<span>sub title</span>}\r\n                  total={numeral(12321).format(\"0,0\")}\r\n                  status=\"up\"\r\n                  subTotal={17.1}\r\n                />\r\n                <MiniArea line height={45} data={visitData} />\r\n              </ChartCard>\r\n            </Col>\r\n            <Col span={12} style={{ marginTop: 24 }}>\r\n              <ChartCard\r\n                title=\"2번 차트\"\r\n                action={\r\n                  <Tooltip title=\"tooltip\">\r\n                    <Icon type=\"info-circle-o\" />\r\n                  </Tooltip>\r\n                }\r\n                total={numeral(8846).format(\"0,0\")}\r\n                footer={\r\n                  <Field label=\"바닥글\" value={numeral(1234).format(\"0,0\")} />\r\n                }\r\n                contentHeight={46}\r\n              >\r\n                <MiniBar height={46} data={visitData} />\r\n              </ChartCard>\r\n            </Col>\r\n          </Row>\r\n          <Col span={24} style={{ marginTop: 24 }}>\r\n            <ChartCard\r\n              title=\"3번 차트\"\r\n              action={\r\n                <Tooltip title=\"툴팁\">\r\n                  <Icon type=\"info-circle-o\" />\r\n                </Tooltip>\r\n              }\r\n              total=\"78%\"\r\n              footer={\r\n                <div>\r\n                  <span>\r\n                    바닥글1\r\n                    <Trend\r\n                      flag=\"up\"\r\n                      style={{ marginLeft: 8, color: \"rgba(0,0,0,.85)\" }}\r\n                    >\r\n                      12%\r\n                    </Trend>\r\n                  </span>\r\n                  <span style={{ marginLeft: 16 }}>\r\n                    바닥글2\r\n                    <Trend\r\n                      flag=\"down\"\r\n                      style={{ marginLeft: 8, color: \"rgba(0,0,0,.85)\" }}\r\n                    >\r\n                      11%\r\n                    </Trend>\r\n                  </span>\r\n                </div>\r\n              }\r\n              contentHeight={46}\r\n            >\r\n              <MiniProgress percent={78} strokeWidth={8} target={80} />\r\n            </ChartCard>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Layout, Menu, Breadcrumb, Icon, Empty } from \"antd\";\n\nimport ToastGridBasic from \"./grid/toastGrid/ToastGridBasic\";\nimport BigSchedulerBasic from \"./calendar/bigScheduler/BigSchedulerBasic\";\nimport DashboardChartBasic from \"./dashboard/chart/Basic\";\n\nimport \"./App.css\";\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\nconst headerMenu = [\n  { key: \"header1\", title: \"calendar\" },\n  { key: \"header2\", title: \"grid\" },\n  { key: \"header3\", title: \"dashboard\" }\n];\n\nconst sidebarMenu_Calendar = [\n  {\n    title: \"BigScheduler\",\n    key: \"csub1\",\n    subMenu: [\n      {\n        key: \"csub1_1\",\n        title: \"Basic\",\n        parentTitle: \"BigScheduler\",\n        component: <BigSchedulerBasic />\n      },\n      {\n        key: \"csub1_2\",\n        title: \"subCalendar2\",\n        parentTitle: \"BigScheduler\",\n        component: \"\"\n      }\n    ]\n  },\n  {\n    title: \"calendar2\",\n    key: \"csub2\",\n    subMenu: [\n      {\n        key: \"csub2_1\",\n        title: \"subCalendar1\",\n        parentTitle: \"calendar2\",\n        component: \"\"\n      },\n      {\n        key: \"csub2_2\",\n        title: \"subCalendar2\",\n        parentTitle: \"calendar2\",\n        component: \"\"\n      },\n      {\n        key: \"csub2_3\",\n        title: \"subCalendar3\",\n        parentTitle: \"calendar2\",\n        component: \"\"\n      }\n    ]\n  }\n];\n\nconst sidebarMenu_Grid = [\n  {\n    title: \"ToastGrid\",\n    key: \"gsub1\",\n    subMenu: [\n      {\n        key: \"gsub1_1\",\n        title: \"Basic\",\n        parentTitle: \"ToastGrid\",\n        component: <ToastGridBasic />\n      }\n    ]\n  },\n  {\n    title: \"Grid2\",\n    key: \"gsub2\",\n    subMenu: [\n      {\n        key: \"gsub2_1\",\n        title: \"subGrid1\",\n        parentTitle: \"Grid2\",\n        component: \"\"\n      },\n      {\n        key: \"gsub2_2\",\n        title: \"subGrid2\",\n        parentTitle: \"Grid2\",\n        component: \"\"\n      },\n      { key: \"gsub2_3\", title: \"subGrid3\", parentTitle: \"Grid2\", component: \"\" }\n    ]\n  }\n];\n\nconst sidebarMenu_Dashboard = [\n  {\n    title: \"Chart\",\n    key: \"dsub1\",\n    subMenu: [\n      {\n        key: \"dsub1_1\",\n        title: \"Basic\",\n        parentTitle: \"Chart\",\n        component: <DashboardChartBasic />\n      },\n      {\n        key: \"dsub1_2\",\n        title: \"subDashboard2\",\n        parentTitle: \"Dashboard1\",\n        component: \"\"\n      }\n    ]\n  },\n  {\n    title: \"Dashboard2\",\n    key: \"dsub2\",\n    subMenu: [\n      {\n        key: \"dsub2_1\",\n        title: \"subDashboard1\",\n        parentTitle: \"Dashboard2\",\n        component: \"\"\n      },\n      {\n        key: \"dsub2_2\",\n        title: \"subDashboard2\",\n        parentTitle: \"Dashboard2\",\n        component: \"\"\n      },\n      {\n        key: \"dsub2_3\",\n        title: \"subDashboard3\",\n        parentTitle: \"Dashboard2\",\n        component: \"\"\n      }\n    ]\n  }\n];\n\nexport class App extends Component {\n  state = {\n    Breadcrumb1: \"calendar\",\n    Breadcrumb2: \"calendar1\",\n    Breadcrumb3: \"subCalendar1\",\n\n    selectedHeaderMenu: \"calendar\",\n    headerMenu: headerMenu,\n    sidebarMenu: sidebarMenu_Calendar,\n\n    content: <BigSchedulerBasic />,\n\n    collapsed: false\n  };\n\n  _handlerClickHeader = e => {\n    if (e.key === \"header1\") {\n      this.setState({\n        selectedHeaderMenu: \"calendar\",\n        sidebarMenu: sidebarMenu_Calendar\n        // Breadcrumb1: \"calendar\",\n        // Breadcrumb2: \"BigScheduler\",\n        // Breadcrumb3: \"Basic\",\n        // content: <BigSchedulerBasic />\n        // Breadcrumb1: \"calendar\",\n        // Breadcrumb2: \"\",\n        // Breadcrumb3: \"\"\n        // content: <Empty />\n      });\n    } else if (e.key === \"header2\") {\n      this.setState({\n        selectedHeaderMenu: \"grid\",\n        sidebarMenu: sidebarMenu_Grid\n        // Breadcrumb1: \"grid\",\n        // Breadcrumb2: \"ToastGrid\",\n        // Breadcrumb3: \"Basic\",\n        // content: <ToastGridBasic />\n        // Breadcrumb1: \"grid\",\n        // Breadcrumb2: \"\",\n        // Breadcrumb3: \"\"\n        // content: <Empty />\n      });\n    } else if (e.key === \"header3\") {\n      this.setState({\n        selectedHeaderMenu: \"dashboard\",\n        sidebarMenu: sidebarMenu_Dashboard\n        // Breadcrumb1: \"dashboard\",\n        // Breadcrumb2: \"Chart\",\n        // Breadcrumb3: \"Basic\",\n        // content: <DashboardChartBasic />\n        // Breadcrumb1: \"dashboard\",\n        // Breadcrumb2: \"\",\n        // Breadcrumb3: \"\"\n        // content: <Empty />\n      });\n    }\n  };\n\n  _renderHeaderMenu = () => {\n    const menu = this.state.headerMenu.map(menu => {\n      return (\n        <Menu.Item key={menu.key} onClick={this._handlerClickHeader}>\n          {menu.title}\n        </Menu.Item>\n      );\n    });\n    return menu;\n  };\n\n  _renderSubMenu = () => {\n    const subMenu = this.state.sidebarMenu.map(menu => {\n      return (\n        <SubMenu\n          key={menu.key}\n          title={\n            <span>\n              <Icon type=\"user\" />\n              <span>{menu.title}</span>\n            </span>\n          }\n        >\n          {this._renderSubMenuItem(menu)}\n        </SubMenu>\n      );\n    });\n    return subMenu;\n  };\n\n  _renderSubMenuItem = menu => {\n    const subMenuItem = menu.subMenu.map(item => {\n      return (\n        <Menu.Item\n          key={item.key}\n          onClick={() => this._handlerClickSubMenuItem(item)}\n        >\n          <span>{item.title}</span>\n        </Menu.Item>\n      );\n    });\n    return subMenuItem;\n  };\n\n  _handlerClickSubMenuItem = item => {\n    this.setState({\n      Breadcrumb1: this.state.selectedHeaderMenu,\n      Breadcrumb2: item.parentTitle,\n      Breadcrumb3: item.title,\n      content: item.component ? item.component : <Empty />\n    });\n  };\n\n  toggleSider = () => {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  };\n\n  _renderTrigger = () => {\n    let component;\n    if (this.state.collapsed === true) {\n      component = (\n        <div className=\"siderTriggerDiv siderTriggerDivRight\">\n          <Icon type=\"right\" onClick={this.toggleSider} />\n        </div>\n      );\n    } else {\n      component = (\n        <div className=\"siderTriggerDiv siderTriggerDivLeft\">\n          <Icon type=\"left\" onClick={this.toggleSider} />\n        </div>\n      );\n    }\n\n    return component;\n  };\n\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Header className=\"header\">\n            <div className=\"logo\">Metanet</div>\n            <Menu\n              theme=\"dark\"\n              mode=\"horizontal\"\n              defaultSelectedKeys={[\"header1\"]}\n              style={{ lineHeight: \"64px\" }}\n            >\n              {this._renderHeaderMenu()}\n            </Menu>\n          </Header>\n          <Layout>\n            <Sider\n              width={200}\n              style={{ background: \"#fff\" }}\n              collapsible\n              collapsed={this.state.collapsed}\n              trigger={null}\n            >\n              {this._renderTrigger()}\n              <Menu\n                mode=\"inline\"\n                defaultOpenKeys={[\"csub1\"]}\n                defaultSelectedKeys={[\"csub1_1\"]}\n                style={{ height: \"100%\", borderRight: 0 }}\n              >\n                {this._renderSubMenu()}\n              </Menu>\n            </Sider>\n            <Layout style={{ padding: \"0 24px 24px\" }}>\n              <Breadcrumb style={{ margin: \"16px 0\" }}>\n                <Breadcrumb.Item>{this.state.Breadcrumb1}</Breadcrumb.Item>\n                <Breadcrumb.Item>{this.state.Breadcrumb2}</Breadcrumb.Item>\n                <Breadcrumb.Item>{this.state.Breadcrumb3}</Breadcrumb.Item>\n              </Breadcrumb>\n              <Content\n                style={{\n                  background: \"#fff\",\n                  padding: 24,\n                  margin: 0,\n                  minHeight: 600\n                }}\n              >\n                {this.state.content}\n              </Content>\n            </Layout>\n          </Layout>\n        </Layout>\n\n        {/* <BigSchedulerBasic /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}