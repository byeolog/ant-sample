{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["SubMenu","Menu","Header","Layout","Content","Sider","headerMenu","key","title","sidebarMenu_Calendar","subMenu","sidebarMenu_Grid","sidebarMenu_Dashboard","App","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","Breadcrumb1","Breadcrumb2","Breadcrumb3","selectedHeaderMenu","sidebarMenu","_handlerClickHeader","e","setState","_renderHeaderMenu","map","menu","react_default","a","createElement","es_menu","Item","onClick","_renderSubMenu","icon","type","_renderSubMenuItem","item","inherits","createClass","value","layout","className","theme","mode","defaultSelectedKeys","style","lineHeight","width","background","defaultOpenKeys","height","borderRight","padding","breadcrumb","margin","minHeight","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.51558213.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport { Layout, Menu, Breadcrumb, Icon } from \"antd\";\n\nconst { SubMenu } = Menu;\nconst { Header, Content, Sider } = Layout;\n\nconst headerMenu = [\n  { key: \"header1\", title: \"calendar\" },\n  { key: \"header2\", title: \"grid\" },\n  { key: \"header3\", title: \"dashboard\" }\n];\n\nconst sidebarMenu_Calendar = [\n  {\n    title: \"calendar1\",\n    key: \"sub1\",\n    subMenu: [\n      { key: \"sub1_1\", title: \"subCalendar1\" },\n      { key: \"sub1_2\", title: \"subCalendar2\" }\n    ]\n  },\n  {\n    title: \"calendar2\",\n    key: \"sub2\",\n    subMenu: [\n      { key: \"sub2_1\", title: \"subCalendar1\" },\n      { key: \"sub2_2\", title: \"subCalendar2\" },\n      { key: \"sub2_3\", title: \"subCalendar3\" }\n    ]\n  }\n];\n\nconst sidebarMenu_Grid = [\n  {\n    title: \"Grid1\",\n    key: \"sub1\",\n    subMenu: [\n      { key: \"sub1_1\", title: \"subGrid1\" },\n      { key: \"sub1_2\", title: \"subGrid2\" }\n    ]\n  },\n  {\n    title: \"Grid2\",\n    key: \"sub2\",\n    subMenu: [\n      { key: \"sub2_1\", title: \"subGrid1\" },\n      { key: \"sub2_2\", title: \"subGrid2\" },\n      { key: \"sub2_3\", title: \"subGrid3\" }\n    ]\n  }\n];\n\nconst sidebarMenu_Dashboard = [\n  {\n    title: \"Dashboard1\",\n    key: \"sub1\",\n    subMenu: [\n      { key: \"sub1_1\", title: \"subDashboard1\" },\n      { key: \"sub1_2\", title: \"subDashboard2\" }\n    ]\n  },\n  {\n    title: \"Dashboard2\",\n    key: \"sub2\",\n    subMenu: [\n      { key: \"sub2_1\", title: \"subDashboard1\" },\n      { key: \"sub2_2\", title: \"subDashboard2\" },\n      { key: \"sub2_3\", title: \"subDashboard3\" }\n    ]\n  }\n];\n\nexport class App extends Component {\n  state = {\n    Breadcrumb1: \"calendar\",\n    Breadcrumb2: \"calendar1\",\n    Breadcrumb3: \"subCalendar1\",\n\n    selectedHeaderMenu: \"calendar\",\n    headerMenu: headerMenu,\n    sidebarMenu: sidebarMenu_Calendar\n  };\n\n  _handlerClickHeader = e => {\n    if (e.key === \"header1\") {\n      this.setState({\n        selectedHeaderMenu: \"calendar\",\n        sidebarMenu: sidebarMenu_Calendar\n      });\n    } else if (e.key === \"header2\") {\n      this.setState({\n        selectedHeaderMenu: \"grid\",\n        sidebarMenu: sidebarMenu_Grid\n      });\n    } else if (e.key === \"header3\") {\n      this.setState({\n        selectedHeaderMenu: \"dashboard\",\n        sidebarMenu: sidebarMenu_Dashboard\n      });\n    }\n  };\n\n  _renderHeaderMenu = () => {\n    const menu = this.state.headerMenu.map(menu => {\n      return (\n        <Menu.Item key={menu.key} onClick={this._handlerClickHeader}>\n          {menu.title}\n        </Menu.Item>\n      );\n    });\n    return menu;\n  };\n\n  _renderSubMenu = () => {\n    const subMenu = this.state.sidebarMenu.map(menu => {\n      return (\n        <SubMenu\n          key={menu.key}\n          title={\n            <span>\n              <Icon type=\"user\" />\n              {menu.title}\n            </span>\n          }\n        >\n          {this._renderSubMenuItem(menu)}\n        </SubMenu>\n      );\n    });\n    return subMenu;\n  };\n\n  _renderSubMenuItem = menu => {\n    const subMenuItem = menu.subMenu.map(item => {\n      return <Menu.Item key={item.key}>{item.title}</Menu.Item>;\n    });\n    return subMenuItem;\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Header className=\"header\">\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={[\"header1\"]}\n            style={{ lineHeight: \"64px\" }}\n          >\n            {this._renderHeaderMenu()}\n          </Menu>\n        </Header>\n        <Layout>\n          <Sider width={200} style={{ background: \"#fff\" }}>\n            <Menu\n              mode=\"inline\"\n              defaultOpenKeys={[\"sub1\"]}\n              defaultSelectedKeys={[\"sub1_1\"]}\n              style={{ height: \"100%\", borderRight: 0 }}\n            >\n              {this._renderSubMenu()}\n            </Menu>\n          </Sider>\n          <Layout style={{ padding: \"0 24px 24px\" }}>\n            <Breadcrumb style={{ margin: \"16px 0\" }}>\n              <Breadcrumb.Item>{this.state.Breadcrumb1}</Breadcrumb.Item>\n              <Breadcrumb.Item>{this.state.Breadcrumb2}</Breadcrumb.Item>\n              <Breadcrumb.Item>{this.state.Breadcrumb3}</Breadcrumb.Item>\n            </Breadcrumb>\n            <Content\n              style={{\n                background: \"#fff\",\n                padding: 24,\n                margin: 0,\n                minHeight: 780\n              }}\n            >\n              Content\n            </Content>\n          </Layout>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}